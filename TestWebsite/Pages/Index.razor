@page "/"

<h1>BlazorFormLayout Test App</h1>

<p>An example of all the controls. Use the buttons below to change how the form is rendered</p>

<div class="row">
    <div class="col-sm-2">Orientation:</div>
    <div class="col-sm-10">
        <ul class="list-inline">
            <li class="list-inline-item">
                <button class=@verticalButton @onclick="(() => SetOrientation(Orientation.Vertical))">Vertical</button>
            </li>
            <li class="list-inline-item">
                <button class=@horizontalButton @onclick="(() => SetOrientation(Orientation.Horizontal))">Horizontal</button>
            </li>
        </ul>
    </div>
</div>

<div class="row">
    <div class="col-sm-2">Mode:</div>
    <div class="col-sm-10">
        <ul class="list-inline">
            <li class="list-inline-item">
                <button class=@editBtn @onclick="(() => SetMode(EditMode.Editing))">Editing</button>
            </li>
            <li class="list-inline-item">
                <button class=@readBtn @onclick="(() => SetMode(EditMode.ReadOnly))">Read-only</button>
            </li>
        </ul>
    </div>
</div>
<BsCard Header="Customer" HeaderCss="bg-info">
    <p>This is the editable form</p>
    <EditForm Model="model">
        <BsLayout Orientation="@formOrientation" EditMode="FormMode">
            <BsText Label="Customer name"
                    class="input-group-sm"
                    @bind-Value="@model.Name"
                    maxlength="20"
                    placeholder="enter name" />
            <BsText @bind-Value="@model.Contact" Label="Contact" />
            <BsCheckbox @bind-Value="@model.IsPriorityCustomer" Label="Priority" CheckboxLabel="Yes" />
            <BsNumber @bind-Value="@model.Units" Label="UnitsToOrder" />
            <BsNumber @bind-Value="@model.Price" Label="UnitPrice" />
            <BsStaticText Value="@model.Total.ToString("c")" Label="Total" />
            <BsGroup Label="Select colour">
                <input type='color' @bind="model.FavouriteColour" disabled="@isDisabled" />
            </BsGroup>
            <BsDropdownEnum @bind-Value="@model.CustomerType" Label="Business type" />
            <BsRadioEnum @bind-Value="@model.DeliveryOption" Label="Delivery option" Inline="false" />
            <BsStaticText Value="@model.DeliveryCost.ToString("c")" Label="Delivery cost" />
            <BsDropdown @bind-Value="@model.CostRegion" Label="Cost region" ValueOptions="@model.GetCostRegions()" />
            <BsGroup Label="Current form context">
                <p class="form-control-plaintext">Sample group @formOrientation in @FormMode mode</p>
            </BsGroup>
            <BsDate @bind-Value="@model.DeliveryDate" Label="Delivery date" MinDate="@minDeliveryDate" />
            <BsDate @bind-Value="@model.OptionalDate" Label="Optional date" />
        </BsLayout>
    </EditForm>
</BsCard>

@code
{
    // form layout control

    EditMode FormMode = EditMode.Editing;

    Orientation formOrientation = Orientation.Horizontal;

    string horizontalButton => buttonCss(formOrientation == Orientation.Horizontal);

    string verticalButton => buttonCss(formOrientation == Orientation.Vertical);

    void SetOrientation(Orientation orientation) => formOrientation = orientation;

    void SetMode(EditMode mode) => FormMode = mode;

    string editBtn => buttonCss(FormMode == EditMode.Editing);

    string readBtn => buttonCss(FormMode == EditMode.ReadOnly);

    // for setting the color picker state
    bool isDisabled => FormMode == EditMode.ReadOnly;

    string buttonCss(bool value) => value ? "btn btn-primary" : "btn btn-outline-primary";

    // model

    Customer model = new Customer();

    /// <summary>
    /// Set min date as tomorrow
    /// </summary>
    private DateTime minDeliveryDate = DateTime.Today.AddDays(1);


}