@inherits BsControlBase<bool>;
<BsValidatedGroup Label="@Label" Id="@Id" ValueExpression="@ValueExpression">
    <div class="form-check">
        <input type="checkbox" id="@myId" class="form-check-input @FixClassNames(CssClass)" @bind="CurrentValue"
               disabled="@(Mode == EditMode.ReadOnly)" />
        <label class="form-check-label" for="@myId">@CheckboxLabel</label>
    </div>
</BsValidatedGroup>
@code
{
    /// <summary>
    /// The text which appears next to the checkbox itself (optional)
    /// </summary>
    [Parameter] public string CheckboxLabel { get; set; }

    protected override bool TryParseValueFromString(string value, out bool result, out string validationErrorMessage)
    {
        throw new NotImplementedException($"This component does not parse string inputs. Bind to the '{nameof(CurrentValue)}' property, not '{nameof(CurrentValueAsString)}'.");
    }

    private string myId;

    /// <summary>
    /// Either use provided ID or create a random one t
    /// </summary>
    protected override void OnParametersSet()
    {
        myId = string.IsNullOrEmpty(Id) ? $"id_{new Random().Next(1, 1000000).ToString()}" : Id;
    }
}